@using Microsoft.AspNet.Identity

<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="@Url.Action("Index", "Home")">Home</a>   
            </div>
            <div class="navbar-collapse collapse" id="searchbar">
                <ul class="nav navbar-nav navbar-right">
                    <li>
                        <a @(ViewContext.RouteData.Values["action"].ToString().Equals("Index") && ViewContext.RouteData.Values["controller"].ToString().Equals("Shop") ? "class=nav-selected" : "") href="@Url.Action("Index", "Shop")">Shop</a>
                    </li>
                    <li>
                        <a @(ViewContext.RouteData.Values["action"].ToString().Equals("Index") && ViewContext.RouteData.Values["controller"].ToString().Equals("Category") ? "class=nav-selected" : "") href="@Url.Action("Index", "Category")">Categories</a>
                    </li>

                    <li>
                        <a class="dropbtn" @(ViewContext.RouteData.Values["action"].ToString().Equals("List") && ViewContext.RouteData.Values["controller"].ToString().Equals("Product") ? "class=nav-selected" : "") href="@Url.Action("List", "Product")">Admin</a>
                    </li>
                    <li>
                        <a @(ViewContext.RouteData.Values["action"].ToString().Equals("Index") && ViewContext.RouteData.Values["controller"].ToString().Equals("Cart") ? "class=nav-selected" : "") href="@Url.Action("Index", "Cart")">Shoping Cart</a>
                    </li>

                    @if (Request.IsAuthenticated)

                     {
                     using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
                        {
                            @Html.AntiForgeryToken()
                            <li>
                                @Html.ActionLink("Hello " + User.Identity.GetUserName() + "!", "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage" })
                            </li>
                            <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>

                        }
                    }
                    else
                    {
                        <li data-toggle="modal" data-target="#myModal">@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
                        <li data-toggle="modal" data-target="#myModal">@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
                    }
                </ul>
                @using (Html.BeginForm("ProductSearch", "Shop", FormMethod.Post, new { @class = "navbar-form" }))
                {
                    <div class="form-group" style="display:inline;">
                        <div class="input-group" style="display:table;">
                            <span class="input-group-addon" style="width:1%;">
                                <button class="btn-search" type="submit">
                                    <span class="glyphicon glyphicon-search search-button" data-url="@Url.Action("ProductSearch", "Shop")"></span>
                                </button>  
                            </span>
                            <input class="form-control" name="search" placeholder="Search Here" autocomplete="off" autofocus="autofocus" type="text">
                        </div>
                    </div>
                }
                @*<form class="navbar-form">
                   
                </form>*@
            </div>
    </div>
</div>


@*<div class="navbar navbar-static-top navbar-default">
    
    <button class="navbar-toggle" data-toggle="collapse" data-target=".navHeaderCollapse">
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
    </button>

 
    <div class="navbar-inner">
        <ul class="nav navbar-nav navbar-right">
            <li>
                <a @(ViewContext.RouteData.Values["action"].ToString().Equals("Index") && ViewContext.RouteData.Values["controller"].ToString().Equals("Shop") ? "class=nav-selected" : "") href="@Url.Action("Index", "Shop")">Shop</a>
            </li>
            <li>
                <a @(ViewContext.RouteData.Values["action"].ToString().Equals("Index") && ViewContext.RouteData.Values["controller"].ToString().Equals("Category") ? "class=nav-selected" : "") href="@Url.Action("Index", "Category")">Categories</a>
            </li>
           
            <li>
                <a class="dropbtn" @(ViewContext.RouteData.Values["action"].ToString().Equals("List") && ViewContext.RouteData.Values["controller"].ToString().Equals("Product") ? "class=nav-selected" : "") href="@Url.Action("List", "Product")">Admin</a>
            </li>
            <li>
                <a @(ViewContext.RouteData.Values["action"].ToString().Equals("Index") && ViewContext.RouteData.Values["controller"].ToString().Equals("Cart") ? "class=nav-selected" : "") href="@Url.Action("Index", "Cart")">Shoping Cart</a>
            </li>

            @if (Request.IsAuthenticated)

            {
                using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
                {
                    @Html.AntiForgeryToken()

               
                    <li>
                        @Html.ActionLink("Hello " + User.Identity.GetUserName() + "!", "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage" })
                    </li>
                    <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
                   
                }
            }
            else
            {
              
                <li data-toggle="modal" data-target="#myModal">@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
                <li data-toggle="modal" data-target="#myModal">@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
                  
            }
        </ul>
    

        </div>
    </div>*@







